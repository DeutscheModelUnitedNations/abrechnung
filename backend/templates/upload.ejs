<!doctype html>
<html lang="<%= language %>">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg" href="https://icons.getbootstrap.com/assets/icons/receipt.svg" />
    <title>Upload</title>
    <style>
      .text > * {
        font-size: 2rem;
      }
      #button {
        border-radius: 0.5rem;
        background-color: rgba(100, 149, 237, 0.2);
        border-color: rgba(100, 149, 237, 0.35);
        border-width: 0.2rem;
        padding: 0.5rem;
      }
      #progress {
        background-color: rgb(100, 149, 237);
        animation-name: shrink;
        animation-duration: <%= secondsLeft %>s;
        animation-timing-function: linear;
        height: 1vh;
        border-radius: 3px;
        width: 0%;
      }
      @keyframes shrink {
        from {
          width: <%= Math.round((secondsLeft * 100) / expireAfterSeconds) %>%;
        }
        to {
          width: 0%;
        }
      }
    </style>
  </head>
  <body style="font-family: Helvetica, Arial, sans-serif">
    <div style="width: 100%; border-radius: 3px; background-color: gainsboro">
      <div id="progress"></div>
    </div>
    <div style="height: 25vh"></div>
    <div class="text" style="width: 100%; text-align: center">
      <div id="text"></div>
      <button id="button" role="button"><%= text.tapToUpload %></button>
      <form id="form" style="display: none">
        <input type="file" id="upload" accept="image/png, image/jpeg, .pdf" multiple />
      </form>
    </div>
    <script>
      document.getElementById('button').onclick = (event) => {
        document.getElementById('upload').click()
      }
      async function fileEventToDocumentFiles(event) {
        const files = []
        if (event.target && event.target.files) {
          for (const file of event.target.files) {
            if (file.size < <%= maxFileSize %>) {
              if (file.type.indexOf('image') > -1) {
                files.push({ data: await resizeImage(file, 1400), type: file.type, name: file.name })
              } else {
                files.push({ data: file, type: file.type, name: file.name })
              }
            } else {
              alert('alerts.imageToBig ' + file.name)
            }
          }
          event.target.value = ''
          return files
        }
        return null
      }

      // From https://stackoverflow.com/a/52983833/13582326
      function resizeImage(file, longestSide) {
        return new Promise((resolve) => {
          const reader = new FileReader()
          reader.readAsDataURL(file)
          reader.onload = function () {
            // We create an image to receive the Data URI
            var img = document.createElement('img')
            // When the img "onload" is triggered we can resize the image.
            img.onload = function () {
              // We create a canvas and get its context.
              var canvas = document.createElement('canvas')
              var ctx = canvas.getContext('2d')
              // We set the dimensions to the wanted size.
              var max = img.height < img.width ? 'width' : 'height'
              var min = max == 'width' ? 'height' : 'width'
              if (img[max] > longestSide) {
                canvas[max] = longestSide
                canvas[min] = img[min] * (longestSide / img[max])
              } else {
                return resolve(file)
              }
              // We resize the image with the canvas method drawImage();
              ctx.drawImage(this, 0, 0, canvas.width, canvas.height)
              canvas.toBlob((blob) => resolve(blob), 'image/jpeg', 0.85)
            }
            // We put the Data URI in the image's src attribute
            img.src = this.result
          }
        })
      }
      var fileInput = document.getElementById('upload')

      fileInput.addEventListener('change', async function (event) {
        const files = await fileEventToDocumentFiles(event)
        if (files) {
          document.getElementById('progress').remove()
          document.getElementById('button').remove()
          document.getElementById('text').innerHTML = '<%= text.uploading %>'
          const FD = new FormData()
          for (var i = 0; i < files.length; i++) {
            for (const [name, value] of Object.entries(files[i])) FD.append('files[' + i + '][' + name + ']', value)
          }
          const response = await fetch('<%- url %>', {
            method: 'POST',
            body: FD
          })
          if (response.ok) {
            document.getElementById('text').innerHTML = '<%= text.success %>'
          } else {
            document.getElementById('text').innerHTML = '<%= text.error %>'
          }
        }
      })
    </script>
  </body>
</html>
