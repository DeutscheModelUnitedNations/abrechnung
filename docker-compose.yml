services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile-${NODE_ENV}
    restart: always
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./common:/app/common:ro
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    env_file:
      - .env

  db:
    image: mongo
    restart: always
    volumes:
      - db_data:/data/db

  # Uses ningx in production mode see /frontend/Dockerfile-production
  frontend:
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile-${NODE_ENV}
    volumes:
      - ./frontend:/app
      - ./common:/app/src/common:ro
    restart: always
    depends_on:
      - backend
    ports:
      - ${FRONTEND_PORT}:80
    env_file:
      - .env

  # Test LDAP only in development mode
  ldap:
    build:
      context: ./dev-tools/ldap
      dockerfile: Dockerfile-${NODE_ENV}
    environment:
      - DEBUG=false

  # Test SMTP + mail client only in development mode
  inbucket:
    build:
      context: ./dev-tools/inbucket
      dockerfile: Dockerfile-${NODE_ENV}
    ports:
      - ${INBUCKET_UI_PORT}:9000

  # Test SMTP + mail client only in development mode
  mongo-express:
    build:
      context: ./dev-tools/mongo-express
      dockerfile: Dockerfile-${NODE_ENV}
    depends_on:
      - db
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=db

volumes:
  db_data:
